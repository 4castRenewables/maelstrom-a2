
name:    ap2-all
outpath: ap2_run
comment: MAELSTROM AP2 benchmark jube script

parameterset:
  - name: appParameter
    parameter:
      - name: batch_size
        tag: "!hps"
        type: int
        _: 32
      - name: batch_size
        tag: hps
        type: int
        _: 16, 32, 64
      - name: nepochs
        tag: "!hps"
        type: int
        _: 4
      - name: nepochs
        tag: hps
        type: int
        _: 1, 3, 10
      - name: lr
        tag: "!hps"
        type: float
        _: 3e-05
      - name: lr
        tag: hps
        type: float
        _: 3e-05, 7e-6
      - name: weightsfixed
        type: string
        _: "" #"-weightsfixed"
      - name: key_rain
        type: string
        _: "tp_h" # "station_tp_mm" or "tp_h"
      - name: model_path
        tag: "jwb|jwc"
        _: /p/project/deepacf/maelstrom/ehlert1/deberta-v3-small/
      - name: model_path
        tag: e4
        _: /data/maelstrom/kehlert/models/deberta-v3-small
      - name: indir
        type: string
        tag: "jwb|jwc"
        _: "/p/scratch/deepacf/maelstrom/maelstrom_data/ap2/data/tweets/"
      - name: indir
        type: string
        tag: e4
        _: "/data/maelstrom/kehlert/data/tweets/"
      - name: data_filename
        tag: medium
        _: "2020_tweets_rain_sun_vocab_emojis_locations_bba_Tp_era5_no_bots_normalized_filtered_weather_stations_fix_predicted_simpledeberta_radar.nc"
      - name: data_filename
        tag: large
        _: "2017-2020_tweets_rain_sun_vocab_emojis_locations_bba_Tp_era5_no_bots_normalized_filtered_weather_stations_fix_predicted_simpledeberta_radar.nc"
      - name: data_filename
        tag: "!medium+!large"
        type: string
        _: "tweets_2017_01_era5_normed_filtered_predicted_simpledeberta.nc"
      - name: outdir
        type: string
        _: "$jube_wp_abspath/output_model"
      - name: run_name
        _: "${jube_benchmark_name}_${jube_benchmark_id}"
      - name: run_folder
        type: string
        _: $run_name
  - name: globalParameter
    parameter:
      # - name: modules
      #  tag: "jwc"
      #  seperator: |
      #  _:
      #    module load Stages/2022 &&
      #    module load cuDNN/8.3.1.22-CUDA-11.5
      - name: modules
        tag: "jwb|jwc"
        separator: |
        _:
          module purge &&
          module load Stages/2023 &&
          module load cuDNN/8.6.0.163-CUDA-11.7 &&
          module unload Python/3.10.4
      - name: modules
        tag: e4
        separator: |
        _:
          module load slurm
          module load nvidia/cuda-11.7
      - name: systemname
        tag: jwc
        _: jwc
      - name: systemname
        tag: jwb
        _: jwb
  - name: executeset
    init_with: platform.xml
  - name: systemParameter
    init_with: platform.xml
    parameter:
      - name: preprocess
        mode: text
        separator: |
        _:
          . /opt/share/scripts/powerdiscovery/getpower.sh $${SLURMD_NODENAME} <CAPTURE TIME> &;
          $modules;
      - name: threadspertask
        _: 1
      - name: nodes
        _: 1
      - name: ready_file
        _: ready
      - name: err_file
        _: gpu-err.%j
      - name: out_file
        _: gpu-out.%j
      - name: n_gpu
        _: 1
      - name: taskspernode
        _: $n_gpu
      - name: timelimit
        tag: test
        _: "01:00:00"
      - name: timelimit
        tag: "!test"
        _: "24:00:00"
      - name: account
        tag: jwb|jwc
        _: deepacf
      - name: account
        tag: e4
        _: maelstrom
      - name: queue
        tag: jwb+!test
        _: booster
      - name: queue
        tag: jwb+test
        _: develbooster
      - name: queue
        tag: e4
        _: i-gpu-a100
      - name: queue
        tag: jwc+!test
        _: gpus
      - name: queue
        tag: jwc+test
        _: develgpus
      - name: mail_type
        _: BEGIN
      - name: gres
        _: gpu:$n_gpu
      - name: executable
        _: python -u $jube_benchmark_home/../scripts/finetune_bert.py
      - name: submit_cmd
        _: sbatch
      - name: job_file
        tag: jwc|jwb
        _: $jube_benchmark_home/job.run
      - name: job_file
        tag: e4
        _: $jube_benchmark_home/job.run.e4
      - name: args_exec
        mode: text
        _: >
          --run_folder ${run_folder}
          --run_name ${run_name}
          --data_filename ${data_filename}
          -lr ${lr}
          -nepochs ${nepochs}
          --data_dir ${indir}
          -jid $${SLURM_JOBID}
          --batch_size ${batch_size}
          --key_rain ${key_rain}
          --model_path ${model_path}
          ${weightsfixed}

patternset:
   - name: perf_patterns
     pattern:
      - {name: jobid, type: int, _: "Running finetuning as args.job_id=$jube_pat_int" }
      - {name: ntweets, type: int, _: "loaded $jube_pat_int tweets"}
      - {name: epoch, type: int, _: "Epoch\\s+$jube_pat_int"}
      - {name: run_time, type: float, _: "RUN\\s+: took ${jube_pat_fp}"}
      - {name: training_time, type: float, _: "TRAINING\\s+: took ${jube_pat_fp}"}
      - {name: epoch_time, type: float, _: "EPOCH\\s+: took ${jube_pat_fp}"}
      - {name: io_time, type: float, _: "IO\\s+: took ${jube_pat_fp}"}
      - {name: forward_time, type: float, _: "FORWARD\\s+: took ${jube_pat_fp}"}
      - {name: backward_time, type: float, _: "BACKWARD\\s+: took ${jube_pat_fp}"}
      - {name: batch_time, type: float, _: "BATCH\\s+: took ${jube_pat_fp}"}
      - {name: saving_model_time, type: float, _: "SAVING_MODEL[\\s+]?: took ${jube_pat_fp}"}
      - {name: loss, type: float, _: "{'loss': $jube_pat_fp"}
      - {name: eval_loss, type: float, _: "{'eval_loss': $jube_pat_fp"}
      - {name: max_memory, type: float, _: "Max memory consumption \\[Gbyte\\]: $jube_pat_fp"}
      
analyser:
    name: analyse
    reduce: false
    use: perf_patterns
    analyse:
      step: submit
      file:
        - slurm-*.out
        - stdout

result:
    use: analyse
    table:
      name: result
      style: pretty
      sort: iter_pat
      column:
        - {title: "#tweets", _: ntweets}
        - {title: "JobID", _: jobid}
        # - {title: "#nodes", _: nodes}
        # - {title: "#gpu", _: n_gpu}
        - {title: "BS", _: batch_size}
        - {title: "T. IO", format: ".4f", _: io_time_sum}
        - {title: "T. run", format: ".4f", _: run_time_last}
        - {title: "T. training", format: ".4f", _: training_time_last}
        - {title: "Avg. epoch", format: ".4f", _: epoch_time_avg}
        - {title: "First epoch", format: ".4f", _: epoch_time_first}
        # - {title: "Min epoch", format: ".4f", _: epoch_time_min}
        # - {title: "Max epoch", format: ".4f", _: epoch_time_max}
        - {title: "Avg. iteration", format: ".4f", _: batch_time_avg}
        - {title: "F. loss", format: ".4f", _: loss_last}
        - {title: "F. eval loss", format: ".4f", _: eval_loss_last}
        - {title: "M. eval loss", format: ".4f", _: eval_loss_min}
        - {title: "Saving time", format: ".4f", _: saving_model_time_last}
        - {title: "l. rate", _: lr}
        - {title: "min loss", format: ".4f", _: loss_min}
        - {title: "# epochs", _: nepochs}
        - {title: "Mem", format: ".4f",  _: max_memory}
        # - {title: "Job_Time", _: timelimit}

#Load jobfile
fileset:
  name: files
  copy: ${job_file}.in

substituteset:
  name: sub_job
  iofile: {in: "${job_file}.in", out: $job_file} #attributes with {} must be quoted
  sub:
    - {source: "#NODES#", dest: $nodes}
    - {source: "#PROCS_PER_NODE#", dest: $taskspernode}
    - {source: "#WALLTIME#", dest: $timelimit}
    - {source: "#ERROR_FILEPTHA#", dest: $err_file}
    - {source: "#OUT_FILEPATH#", dest: $out_file}
    - {source: "#MAIL_TYPE#", dest: $mail_type}
    - {source: "#ACCOUNT#", dest: $account}
    - {source: "#PARTITION#", dest: $queue}
    - {source: "#EXEC#", dest: "${executable} ${args_exec}"}
    - {source: "#READY#", _: $ready_file } # _ can be used here as well instead of dest (should be used

step:
  - name:   setup_venv
    use:
      - globalParameter
      - systemParameter
    do:
      _:
        $modules;
  - name:   submit
    use:
      - appParameter
      - globalParameter
      - systemParameter
      - executeset
      - sub_job
      - from: platform.xml
        _: jobfiles
      - from: platform.xml
        _: executesub
    do:
      done_file: $ready_file
      error_file: $error_file
      _:
        $modules;
        source ~/.bashrc;
        source $jube_benchmark_home/env.sh;
        conda activate a2-benchmarking;
        $submit_cmd $job_file;
